{
  "id": "guide/router-store/selectors",
  "title": "Router selectors",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com//edit/master/NODEJS/ngrx.io/content/guide/router-store/selectors.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"router-selectors\">Router selectors<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-store/selectors#router-selectors\"><i class=\"material-icons\">link</i></a></h1>\n<p>The <code>getSelectors</code> method supplied within <code>@ngrx/router-store</code> provides functions for selecting common information from the router state.</p>\n<p>The <code>getSelectors</code> method takes a selector function as its only argument to select the piece of state where the router state is being stored.\nThe example below shows how to provide a selector for the top level <code>router</code> key in your state object.</p>\n<p><strong>Note:</strong> The <code>getSelectors</code> method works with the <code>routerReducer</code> provided by <code>@ngrx/router-store</code>. If you use a <a href=\"guide/router-store/configuration#custom-router-state-serializer\">custom serializer</a>, you'll need to provide your own selectors.</p>\n<p>Usage:</p>\n<p><code>reducers/index.ts</code></p>\n<code-example language=\"ts\">\nimport * as fromRouter from '@ngrx/router-store';\n\nexport interface State {\n  router: fromRouter.RouterReducerState&#x3C;any>;\n}\n\nexport const selectRouter = createFeatureSelector&#x3C;\n  State,\n  fromRouter.RouterReducerState&#x3C;any>\n>('router');\n\nconst {\n  selectCurrentRoute,   // select the current route\n  selectQueryParams,    // select the current route query params\n  selectQueryParam,     // factory function to select a query param\n  selectRouteParams,    // select the current route params\n  selectRouteParam,     // factory function to select a route param\n  selectRouteData,      // select the current route data\n  selectUrl,            // select the current url\n} = fromRouter.getSelectors(selectRouter);\n\nexport const selectSelectedCarId = selectQueryParam('carId');\nexport const selectCar = createSelector(\n   selectCarEntities,\n   selectSelectedCarId,\n   (cars, carId) => cars[carId]\n);\n\nexport const selectCarsByColor = createSelector(\n   selectCarEntities,\n   selectQueryParams,\n   (cars, params) => cars.filter(c => c.color === params['color'])\n);\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/router-store/configuration#custom-router-state-serializer\n - guide/router-store/selectors#router-selectors\n - https://github.com//edit/master/NODEJS/ngrx.io/content/guide/router-store/selectors.md?message=docs%3A%20describe%20your%20change...\n-->"
}